<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductMapper">
 	
 	
	<resultMap id="productSelectMap" type="product">
		<result property="fileName" 			column="IMAGE_FILE" 			jdbcType="VARCHAR"/>
		<result property="manuDate"	column="MANUFACTURE_DAY" 		jdbcType="VARCHAR" />
		<result property="price" 	column="PRICE" 		jdbcType="NUMERIC" />
		<result property="prodDetail" 				column="PROD_DETAIL" 					jdbcType="VARCHAR" />
		<result property="prodName" 				column="PROD_NAME" 					jdbcType="VARCHAR" />
		<result property="prodNo" 			column="PROD_NO" 		jdbcType="NUMERIC" />
		<result property="regDate" 				column="REG_DATE" 					jdbcType="DATE" />
		<result property="proTranCode"		column="TRAN_STATUS_CODE"		jdbcType="CHAR"/>
	</resultMap>
	
	<!-- SQL : INSERT -->
	<insert 	id="addProduct"		parameterType="product" >
	 	INSERT
		INTO product(PROD_NO, PROD_NAME, PROD_DETAIL, MANUFACTURE_DAY, PRICE, IMAGE_FILE, REG_DATE ) 
		VALUES (	seq_product_prod_no.nextval,#{prodName},#{prodDetail:VARCHAR},TO_CHAR(TO_DATE(#{manuDate},'yyyy-mm-dd'),'YYYYMMDD'),#{price},#{fileName:VARCHAR},sysdate )
	 </insert>
	 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="getProduct"	parameterType="string"		resultMap="productSelectMap">
		SELECT
		PROD_NO, PROD_NAME, PROD_DETAIL, MANUFACTURE_DAY, PRICE, IMAGE_FILE, REG_DATE	
		FROM product
		WHERE PROD_NO = #{value}
	 </select>
	 
	 <!-- SQL : UPDATE -->
	 <update	id="updateProduct"	parameterType="product" >
	   	UPDATE product
	   	<set>
	   		PROD_NAME = #{prodName} ,
			PROD_DETAIL = #{prodDetail:VARCHAR},
			MANUFACTURE_DAY = #{manuDate},
			PRICE =	 #{price},
			IMAGE_FILE = #{fileName:VARCHAR}
	   	</set>
	   	WHERE prod_no = #{prodNo}
	 </update>
		 
	<!-- SQL : SELECT LIST -->
	<select  id="getProductList"  parameterType="search"	resultMap="productSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT p.prod_no, p.prod_name, p.price, p.reg_date, t.tran_status_code
											FROM product p, transaction t
											<where>
													p.PROD_NO=t.PROD_NO(+)
												<if test="searchCondition != null">
												
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				and p.PROD_NO= #{searchKeyword}
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				and p.PROD_NAME LIKE '%'||#{searchKeyword}||'%'
													</if>
													<if test="searchCondition == 2 and searchKeyword !='' ">
										 				and p.PRICE= #{searchKeyword}
													</if>
												</if>
											</where>
											ORDER BY p.prod_no ) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		-->
	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT p.prod_no, p.prod_name, p.price, p.reg_date, t.tran_status_code
											FROM product p, transaction t
						
								<where>
									p.PROD_NO=t.PROD_NO(+)
									<if test="searchCondition != null">
									<if test="searchCondition == 0 and searchKeyword !='' ">
										 and p.PROD_NO= #{searchKeyword}
									</if>
									<if test="searchCondition == 1 and searchKeyword !='' ">
										 and p.PROD_NAME LIKE '%'||#{searchKeyword}||'%'
									</if>
									<if test="searchCondition == 2 and searchKeyword !='' ">
										 and p.PRICE= #{searchKeyword}
									</if>	
							</if>
						</where> ) countTable						
	 </select>
	 
</mapper>